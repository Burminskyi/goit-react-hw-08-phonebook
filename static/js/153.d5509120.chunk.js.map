{"version":3,"file":"static/js/153.d5509120.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","pages/ContactsPage/ContactsPage.styled.js","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { Button, Form, FormLabel } from 'react-bootstrap';\nimport { styled } from 'styled-components';\n\nexport const StyledContactsForm = styled(Form)`\n  width: 300px;\n  margin-top: 15px;\n`;\n\nexport const StyledContactsFormBtn = styled(Button)`\n  display: block;\n  margin: auto;\n  width: 300px;\n`;\n\nexport const StyledFormLabel = styled(FormLabel)`\n  font-weight: 500;\n  color: #0d6efd;\n  margin-bottom: 5px;\n`;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","// -------CONTACTS--------\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectContactsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\n","import { ListGroupItem } from 'react-bootstrap';\nimport { styled } from 'styled-components';\n\nexport const StyledContactsListGroupItem = styled(ListGroupItem)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, ListGroup } from 'react-bootstrap';\n\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/operations';\nimport { selectAuthentificationStatus } from 'redux/auth/selector';\nimport {\n  selectContacts,\n  selectContactsError,\n  selectContactsLoading,\n  selectFilter,\n} from 'redux/contacts/selectors';\nimport { StyledContactsListGroupItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const isAuthentificated = useSelector(selectAuthentificationStatus);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isAuthentificated) return;\n    dispatch(fetchContactsThunk());\n  }, [dispatch, isAuthentificated]);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <div\n      style={{\n        width: 'inherit',\n      }}\n    >\n      {error && <p>{error}</p>}\n      {isLoading && <Loader />}\n      {showContacts && (\n        <ListGroup>\n          {filteredContacts().map(contact => {\n            const { id, name, number } = contact;\n            return (\n              <StyledContactsListGroupItem key={id}>\n                <div>\n                  <p>\n                    <b>Name:</b> {name}\n                  </p>\n                  <p>\n                    <b>Number:</b> {number}\n                  </p>\n                </div>\n                <Button\n                  aria-label=\"Delete\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContactThunk(id))}\n                >\n                  Delete\n                </Button>\n              </StyledContactsListGroupItem>\n            );\n          })}\n        </ListGroup>\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import { InputGroup } from 'react-bootstrap';\nimport { styled } from 'styled-components';\n\n\nexport const StyledFilterWrap = styled.div`\n  display: flex;\n    flex-direction: column;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    gap: 8px;\n`;\n\nexport const StyledFilterLabel = styled.label`\n  font-size: 18px;\n  font-weight: 500;\n  margin: auto;\n`;\n\nexport const StyledFilterInputForm = styled(InputGroup)`\n  width: 300px;\n`;","import { InputGroup, Form } from 'react-bootstrap';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { StyledFilterInputForm, StyledFilterLabel, StyledFilterWrap } from './Filter.styled';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <StyledFilterWrap>\n      <StyledFilterLabel htmlFor={filterId}>\n        Find contacts by name\n      </StyledFilterLabel>\n      <StyledFilterInputForm className=\"mb-3\">\n        <InputGroup.Text>\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n            <path\n              d=\"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z\"\n              stroke=\"currentColor\"\n              fill=\"none\"\n              fillRule=\"evenodd\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            ></path>\n          </svg>\n        </InputGroup.Text>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Search\"\n          aria-label=\"Username\"\n          name=\"filter\"\n          value={filter}\n          id={filterId}\n          onChange={({ target }) => {\n            dispatch(setFilter(target.value));\n          }}\n        />\n      </StyledFilterInputForm>\n    </StyledFilterWrap>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Container } from 'react-bootstrap';\nimport { styled } from 'styled-components';\n\nexport const StyledContactsPageContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledContactForm = styled(ContactForm)`\n  margin: auto;\n`;\n","import { Form } from 'react-bootstrap';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContactThunk } from 'redux/contacts/operations';\nimport {\n  StyledContactsForm,\n  StyledContactsFormBtn,\n  StyledFormLabel,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n    if (name === 'number') {\n      setNumber(value);\n      return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isInContacts = contacts.some(\n      contacts => contacts.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert('This contact is already exist');\n      return;\n    }\n\n    dispatch(addContactThunk({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <StyledContactsForm className=\"mb-4\" onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-2\">\n        <StyledFormLabel>Contact name</StyledFormLabel>\n        <Form.Control\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          required\n          onChange={handleChange}\n        />\n        <Form.Text className=\"text-muted\"></Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-4\">\n        <StyledFormLabel>Phone</StyledFormLabel>\n        <Form.Control\n          name=\"number\"\n          value={number}\n          type=\"tel\"\n          placeholder=\"Enter contact phone\"\n          required\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <StyledContactsFormBtn variant=\"primary\" type=\"submit\">\n        Create contact\n      </StyledContactsFormBtn>\n    </StyledContactsForm>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  StyledContactForm,\n  StyledContactsPageContainer,\n} from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <StyledContactsPageContainer>\n      <h1>My contacts</h1>\n      <StyledContactForm />\n      <Filter />\n      <ContactList />\n    </StyledContactsPageContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledContactsForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledContactsFormBtn","Button","_templateObject2","StyledFormLabel","FormLabel","_templateObject3","ListGroupItem","React","_ref","ref","bsPrefix","active","disabled","eventKey","className","variant","action","as","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","_useNavItem","useNavItem","_objectSpread","key","makeEventKey","href","_useNavItem2","_slicedToArray","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","concat","displayName","ListGroup","horizontalVariant","_useUncontrolled","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","_useUncontrolled$as","controlledProps","BaseNav","Object","assign","Item","selectContacts","state","contacts","selectFilter","filter","selectContactsLoading","isLoading","selectContactsError","error","StyledContactsListGroupItem","ContactList","isAuthentificated","useSelector","selectAuthentificationStatus","dispatch","useDispatch","useEffect","fetchContactsThunk","showContacts","Array","isArray","length","_jsxs","style","width","children","Loader","normalizedFilter","toLowerCase","contact","name","includes","filteredContacts","map","id","number","type","deleteContactThunk","context","InputGroupText","createWithBsPrefix","InputGroup","size","hasValidation","_ref$as","contextValue","useMemo","InputGroupContext","Provider","value","Text","Radio","FormCheckInput","Checkbox","StyledFilterWrap","StyledFilterLabel","StyledFilterInputForm","filterId","arguments","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","Filter","htmlFor","height","viewBox","d","stroke","fill","fillRule","strokeLinecap","strokeLinejoin","placeholder","onChange","target","setFilter","StyledContactsPageContainer","Container","StyledContactForm","_useState","useState","_useState2","setName","_useState3","_useState4","setNumber","handleChange","reset","onSubmit","e","isInContacts","some","alert","addContactThunk","required"],"sourceRoot":""}