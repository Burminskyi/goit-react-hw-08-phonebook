{"version":3,"file":"static/js/153.81fe48d3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// -------CONTACTS--------\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectContactsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;\n","import { Form, Button } from 'react-bootstrap';\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContactThunk } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n    if (name === 'number') {\n      setNumber(value);\n      return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isInContacts = contacts.some(\n      contacts => contacts.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert('This contact is already exist');\n      return;\n    }\n\n    dispatch(addContactThunk({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form\n    className=\"mb-4\"\n      onSubmit={handleSubmit}\n      style={{\n        width: '300px',\n        marginTop: '15px',\n      }}\n    >\n      <Form.Group className=\"mb-2\">\n        <Form.Label>Contact name</Form.Label>\n        <Form.Control\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          required\n          onChange={handleChange}\n        />\n        <Form.Text className=\"text-muted\"></Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-4\">\n        <Form.Label>Phone</Form.Label>\n        <Form.Control\n          name=\"number\"\n          value={number}\n          type=\"tel\"\n          placeholder=\"Enter contact phone\"\n          required\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        style={{\n          display: 'block',\n          margin: 'auto',\n          width: '300px',\n        }}\n      >\n        Create contact\n      </Button>\n    </Form>\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListBtn\":\"ContactList_contactListBtn__iwQAv\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, ListGroup } from 'react-bootstrap';\nimport styles from './ContactList.module.css';\n\n\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { deleteContactThunk, fetchContactsThunk } from 'redux/contacts/operations';\nimport { selectAuthentificationStatus } from 'redux/auth/selector';\nimport { selectContacts, selectContactsError, selectContactsLoading, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const isAuthentificated = useSelector(selectAuthentificationStatus);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectContactsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isAuthentificated) return;\n    dispatch(fetchContactsThunk());\n  }, [dispatch, isAuthentificated]);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <div\n      style={{\n        width: 'inherit',\n      }}\n    >\n      {error && <p>{error}</p>}\n      {isLoading && <Loader />}\n      {showContacts && (\n        <ListGroup className={styles.contactList}>\n          {filteredContacts().map(contact => {\n            const { id, name, number } = contact;\n            return (\n              <ListGroup.Item\n                className={styles.contactListItem}\n                key={id}\n              >\n                <div>\n                  <p>\n                    <b>Name:</b> {name}\n                  </p>\n                  <p>\n                    <b>Number:</b> {number}\n                  </p>\n                </div>\n                <Button\n                  aria-label=\"Delete\"\n                  variant=\"primary\"\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContactThunk(id))}\n                >\n                  Delete\n                </Button>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrap\":\"Filter_filterWrap__xOHoa\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import styles from './Filter.module.css';\nimport { InputGroup, Form } from 'react-bootstrap';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.filterWrap}>\n      <label htmlFor={filterId} className={styles.filterLabel}>\n        Find contacts by name\n      </label>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Text>\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n            <path\n              d=\"M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z\"\n              stroke=\"currentColor\"\n              fill=\"none\"\n              fillRule=\"evenodd\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            ></path>\n          </svg>\n        </InputGroup.Text>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Search\"\n          aria-label=\"Username\"\n          name=\"filter\"\n          value={filter}\n          id={filterId}\n          onChange={({ target }) => {\n            dispatch(setFilter(target.value));\n          }}\n        />\n      </InputGroup>\n      {/* <input\n        className={styles.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        id={filterId}\n        onChange={({ target }) => {\n          dispatch(setFilter(target.value));\n        }}\n      /> */}\n    </div>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container } from 'react-bootstrap';\n\nconst ContactsPage = () => {\n  return (\n    <Container style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }}>\n      <h1>My contacts</h1>\n      <ContactForm style={{ margin: 'auto' }} />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectContactsLoading","isLoading","selectContactsError","error","ContactForm","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","target","value","reset","Form","className","onSubmit","e","preventDefault","isInContacts","some","toLowerCase","alert","addContactThunk","style","width","marginTop","type","placeholder","required","onChange","Button","variant","display","margin","ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","ContactList","isAuthentificated","selectAuthentificationStatus","useEffect","fetchContactsThunk","showContacts","Array","isArray","length","Loader","styles","normalizedFilter","contact","includes","filteredContacts","map","id","deleteContactThunk","context","InputGroupText","createWithBsPrefix","InputGroup","size","hasValidation","contextValue","useMemo","InputGroupContext","Provider","children","Text","Radio","FormCheckInput","Checkbox","filterId","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","Filter","htmlFor","height","viewBox","d","stroke","fill","fillRule","strokeLinecap","strokeLinejoin","setFilter","Container","flexDirection","alignItems"],"sourceRoot":""}